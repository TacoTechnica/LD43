<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSacrificeAltar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objCollision</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Altar variables

// Parameters
_text1 = "You need     ";
_text1_sep = "      ";
_text2 = _text1_sep + "goats for the power you seek"; 

_animation_index_light_duration = 60;

// Util

_goats_left = instance_number(objGoat) + instance_number(objGoatSleeping);

_near_player = false;
_animation_index = 0;

// When this is running, we're sacrificing.
_sacrificing = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visual
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If near player. Also update animation thing

if instance_exists(objPlayer) {

    _near_player = sqr(objPlayer.x - x) + sqr(objPlayer.y - y) &lt; sqr(64);
    
    if _near_player &amp;&amp; !_sacrificing {
        _animation_index++;
    } else {
        _animation_index--;
        if (_animation_index &lt; 0) _animation_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If we're done, we're done.

var cheat = keyboard_check(vk_control) &amp;&amp; keyboard_check(ord("A")) &amp;&amp; keyboard_check_pressed(vk_f1);
if _goats_left == 0 || cheat {
    instance_create(x, y, objSacrificeAltarSuper);
    with (objPlayer) {
        instance_create(x, y, objPlayerSuperTransition);
        instance_destroy();
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop sacrificing
_sacrificing = false;
_goats_left--;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw spooky text

if !_sacrificing {

    draw_set_font(font_main);
    draw_set_color(c_red);
    
    //var count_chars_total = string_length(_text1) + string_length(_text2) + string_length(string(_goats_left));
    var s_1 = string_length(_text1);
    var s_2 = string_length(_text2);
    
    var count_chars_1 = clamp(_animation_index, 0, s_1);
    var count_chars_2 = clamp(_animation_index - s_1, 0, s_2);
    var count_total = count_chars_1 + count_chars_2;
    
    var string_x = x - 64 - 48;
    var string_y = y - 64;
    var char_width = 6;
    
    var drew_number = false;
    
    for(var i = 1; i &lt;= count_total; i++) {
        var dh = 5 * sin((_animation_index + i) * 2*pi/60);
        if (i &lt; count_chars_1) {
            draw_text(string_x + i*char_width, string_y + dh, string_char_at(_text1, i));
        } else {
            if !drew_number {
                drew_number = true;
                // Count
                var c1 = make_colour_rgb(255, 127+127*sin(_animation_index/100), 0.2*(127+127*sin(_animation_index/100)));
                var c2 = make_colour_rgb(255, 127+127*sin(10 + _animation_index/100), 0.2*(127+127*sin(-20 + _animation_index/50)));
                string_y += 15
                draw_text_ext_colour(x, string_y, string(_goats_left),0,160, c1, c1, c2, c2, 1);
                string_y += 15;
            }
            var new_i = i - s_1;
            draw_text(string_x - string_length(_text1_sep)*char_width + new_i*char_width, string_y + dh, string_char_at(_text2, new_i));
        }
    }
    
    draw_set_color(c_black);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
