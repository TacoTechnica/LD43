<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMover</parentName>
  <maskName>maskEntity</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player state

enum PLAYER_STATE {
    NORMAL,
    CUTSCENE,
    ASCENDED
};

_state = PLAYER_STATE.NORMAL;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Overrides
_fric = 0.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move variables

// Parameters
_move_force = 0.22;

// Util
_move_x_axis = 0;
_move_y_axis = 0;

_last_move_dir = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bounce progress
_bounce_progress_counter = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pickup object

_item_pickup = noone;

_goat_stack = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Inputs

if _state != PLAYER_STATE.CUTSCENE {
    _move_x_axis = keyboard_check(ord("D")) - keyboard_check(ord("A"));
    _move_y_axis = keyboard_check(ord("S")) - keyboard_check(ord("W"));
    
    if _move_x_axis == 0 &amp;&amp; _move_y_axis == 0 {
        _move_x_axis = keyboard_check(vk_right) - keyboard_check(vk_left);
        _move_y_axis = keyboard_check(vk_down) - keyboard_check(vk_up);
    }
} else {
    _move_x_axis = 0;
    _move_y_axis = 0;
}

if _move_x_axis != 0 || _move_y_axis != 0 {
    var move_angle = point_direction(0, 0, _move_x_axis, _move_y_axis);
    var adiff = angle_difference(move_angle, _last_move_dir);
    var spd = clamp(10 * adiff / 45, 8, 30);
    if abs(adiff) &lt; spd {
        _last_move_dir = move_angle;
    } else {
        _last_move_dir += sign(adiff) * spd;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move physics

_vel_x += _move_x_axis * _move_force;
_vel_y += _move_y_axis * _move_force;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Bounce

var bounce_speed = mover_get_bounce_scale();
var bounce_scale = mover_get_bounce_speed();

// If we're moving, scale up!
var target_scale = _move_x_axis != 0 || _move_y_axis != 0;

// Start from zero
if !target_scale &amp;&amp; abs(bounce_scale) &lt; 0.05 {
    mover_reset_bounce();
    _bounce_progress_counter = 0;
}

bounce_speed += (target_scale - bounce_speed) * 0.1;
bounce_scale += (target_scale - bounce_scale) * 0.3;

mover_set_bounce_speed(bounce_speed);
mover_set_bounce_scale(bounce_scale);

// Every bump
if mover_get_bounce_progress() &gt; _bounce_progress_counter {
    _bounce_progress_counter = ceil(mover_get_bounce_progress());
    if _bounce_progress_counter % 2 == 0
        audio_play_sound(sound_player_walk_1, 2, false);
    else
        audio_play_sound(sound_player_walk_2, 2, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visuals

depth = -y;

// image xscale
if _move_x_axis &gt; 0 image_xscale = 1;
if _move_x_axis &lt; 0 image_xscale = -1;

// We invisible if it's a cutscene
visible = _state != PLAYER_STATE.CUTSCENE;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Space: Action!

// Pickup items

if _state == PLAYER_STATE.NORMAL &amp;&amp; keyboard_check_pressed(vk_space) {
    var item = instance_place(x, y, objPickup);

    if (item != noone &amp;&amp; item != _item_pickup) {
        // Stack up goats
        if item.object_index == objGoatSleeping &amp;&amp; player_get_item_index() == objGoatSleeping {
            _goat_stack++;
            instance_destroy(item);
        } else {
            if (item.object_index == objGoatSleeping) 
                _goat_stack++;
            else {
                if _goat_stack != 0 {
                    // Drop goats!
                    while(_goat_stack &gt; 1) {
                        instance_create(x + random(20) - 10, y + random(20) - 10, objGoatSleeping);
                        _goat_stack--;
                    }
                    _goat_stack = 0;
                }
            }
            _item_pickup = item;
        }
        audio_play_sound(sound_pickup, 5, false);
    } else if _item_pickup != noone {

        if _goat_stack &gt; 0 &amp;&amp; collision_rectangle(x - 4, y - 16, x + 4, y + 4, objSacrificeAltar,true, false) {
            // Sacrifice goats
            // Sacrifice goat if placed on altar
            if !objSacrificeAltar._sacrificing {
                objSacrificeAltar._sacrificing = true;
                objSacrificeAltar.image_speed = 10/60;
                _goat_stack--;
                if (_goat_stack == 0) {
                    instance_destroy(_item_pickup);
                    _item_pickup = noone;
                }
                audio_play_sound(sound_sacrifice, 6, false);
            }
        } else if player_get_item_index() = objBrick {
            // Throw brick
            var throw_side_vel = 3;
            _item_pickup.y = floor(y / 16) * 16 + 8;
            _item_pickup._height = 3;
            _item_pickup._vel_h = 2;
            _item_pickup._vel_x = lengthdir_x(throw_side_vel, _last_move_dir);
            _item_pickup._vel_y = lengthdir_y(throw_side_vel, _last_move_dir);
            _item_pickup.sprite_index = _item_pickup._default_sprite;
            _item_pickup = noone;
            audio_play_sound(sound_throw, 4, false);
        } else {
            
            _item_pickup.y = y + 4;
            _item_pickup.sprite_index = _item_pickup._default_sprite;
            _item_pickup = noone;
            if _goat_stack != 0 {
                // Drop goats!
                while(_goat_stack &gt; 1) {
                    instance_create(x + random(20) - 10, y + random(20) - 10, objGoatSleeping);
                    _goat_stack--;
                }
                _goat_stack = 0;
            }
            audio_play_sound(sound_goat_fall, 5, false);
        }
    }

    // Subdue goats!
    if _item_pickup == noone {
        var goater = instance_place(x, y, objGoat);
        if (goater != noone) {
            // Goat's a goater!
            _state = PLAYER_STATE.CUTSCENE;
            var subduer = instance_create(goater.x, goater.y, objPlayerSubduing);
            subduer.image_xscale = goater.image_xscale;
            image_xscale = subduer.image_xscale;
            with (goater) goat_silence();
            instance_destroy(goater);
        }    
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Item pickup
if _item_pickup != noone {
    //show_debug_message("oPlayer Step 7: " + string(object_get_name( player_get_item_index())));
    _item_pickup.sprite_index = noone;
    _item_pickup.x = x;
    _item_pickup.y = y - _bounce_height;
    _item_pickup.image_angle = _bounce_angle;
    _item_pickup.depth = depth - 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera
camera_follow(x, y - 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If holding brick, draw retical

if player_get_item_index() == objBrick {
    var r = 5 * 16;
    var dx = lengthdir_x(r, _last_move_dir);
    var dy = lengthdir_y(r, _last_move_dir);
    draw_sprite(sprRetical, 0, x+dx, y+dy);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If holding multiple goats, draw em

if (_goat_stack != 0) {
    draw_set_color(c_white);
    draw_text(x + 8, y, "x " + string(_goat_stack));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
